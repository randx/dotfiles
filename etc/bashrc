#!/bin/sh
export PATH=~/.dotfiles/bin:/usr/local/bin:/usr/local/sbin:$PATH

# locale stuff
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

export EDITOR='vim'

if [[ "$TERM_PROGRAM" =~ iTerm|Apple_Terminal ]] && [[ -x "`which mvim`" ]]; then
  export EDITOR='mvim -f'
  export BUNDLER_EDITOR='mvim'
  export GEM_EDITOR='mvim'
fi

# History
export HISTCONTROL=ignoredup # don't put duplicate lines in the history.s
export HISTFILESIZE=3000
export HISTIGNORE="ls:cd:[bf]g:exit:..:...:ll:lla"

# Autofix typos
shopt -s cdspell

# Aliases
if [ "$OS" = "linux" ] ; then
  alias ls='ls --color=auto' # For linux, etc
  # ls colors, see: http://www.linux-sxs.org/housekeeping/lscolors.html
  export LS_COLORS='di=1:fi=0:ln=31:pi=5:so=5:bd=5:cd=5:or=31:mi=0:ex=35:*.rb=90'  #LS_COLORS is not supported by the default ls command in OS-X
else
  alias ls='ls -G'  # OS-X SPECIFIC - the -G command in OS-X is for colors, in Linux it's no groups
  alias top='top -o cpu'
fi

# disk usage with human sizes
alias du1='du -hs'                            

# Lists folders and files sizes in the current folder
alias ducks='du -cksh * | sort -rn|head -11'  

alias ll='ls -AFGHhl'

alias reloadbash='source ~/.bash_profile'

#http heaers en1 (airport)
alias sniff_headers="sudo tcpflow -c -p -i en0 | httpflow.py"

alias uninstall_all_gems='gem list |cut -d" " -f1|xargs gem uninstall -aIx'

alias gemdep="gem dependency"

alias be="bundle exec"

alias gitx='open -a GitX'

# Functions
ff(){ 
  find . -name $@ -print 
}

hf(){ 
  ack "$@" ~/.bash_history --color-match=red 
}

g(){ 
  ack $@ --color-match=red --color-filename=blue --smart-case 
}

gw(){ 
  ack $@ --color-match=green --color-filename=blue --word-regexp --smart-case 
}


# load Homebrew's shell completion
if which brew > /dev/null && [ -f "$(brew --prefix)/Library/Contributions/brew_bash_completion.sh" ]
then
  source "$(brew --prefix)/Library/Contributions/brew_bash_completion.sh"
fi

if [ -f `brew --prefix`/etc/bash_completion ]; then
  . `brew --prefix`/etc/bash_completion
fi

# Invitation
# <new line><user>:<current_directory> git_branch <new line> <prompt>
export PS1="\n\u:\w \[\e[1;32m\]\$(__git_ps1 '%s')\[\e[0m\] \nâ†’ "

#rbenv
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

# push SSH public key
push_ssh_cert() {
    local _host
    test -f ~/.ssh/id_dsa.pub || ssh-keygen -t dsa
    for _host in "$@";
    do
        echo $_host
        ssh $_host 'cat >> ~/.ssh/authorized_keys' < ~/.ssh/id_dsa.pub
    done
}

# appends your key to a server's authorized keys file
authme() {
	ssh $1 'cat >>.ssh/authorized_keys' <~/.ssh/id_dsa.pub
}

# Make port 80 "real life" speeds. You can also use Mongrel ports.
slow_port() {
  # Set the port variable if no port inputted. Defaulted to 80 (for Passenger).
  if [ -z "$1" ]
  then port=80
  else port=$1
  fi
  
  # Slow the ports.
  sudo ipfw pipe 1 config bw 100KByte/s
  sudo ipfw add 1 pipe 1 src-port $port
  sudo ipfw add 1 pipe 1 dst-port $port
  echo "Port $port succesfully slowed."
}
 
unslow_port() {
  sudo ipfw delete 1
  echo "Port succesfully un-slowed."
}

# node version manager
source ~/.nvm/nvm.sh

export CC=gcc-4.2
export CXX=g++-4.2
